
<script>
document.addEventListener('DOMContentLoaded', () => {
  const lazyBlocks = document.querySelectorAll('.lazy-block');
  for (const block of lazyBlocks) {
    block.classList.add('lazyBlockWaiting');
    
    const callback = (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.remove('lazyBlockWaiting')
        }
      })
    }
    const myObserver = new IntersectionObserver(callback, {})
    myObserver.observe(block)
  }
})
</script>

<style lang="scss" global>
@keyframes fadeUp {
  from {
    opacity: 0;
    transform: translateY(5%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.lazy-block {
  opacity: 0;
  animation: fadeUp 0.5s linear;
  animation-fill-mode: forwards;
  animation-delay: 0.5s;
}

.lazy-block.lazyBlockWaiting {
  opacity: 0;
}

@for $i from 1 to 10 {
  .lazy-block.delay-#{$i} { 
    animation-delay: ($i * 0.5s) + 0.5s;
  }
}
</style>